backend: !!python/unicode 'tensorflow'
class_name: Sequential
config:
- class_name: Conv1D
  config:
    activation: linear
    activity_regularizer: null
    batch_input_shape: !!python/tuple [null, null, 128]
    bias_constraint: null
    bias_initializer:
      class_name: Zeros
      config: {}
    bias_regularizer: null
    dilation_rate: !!python/tuple [1]
    dtype: float32
    filters: 96
    kernel_constraint: null
    kernel_initializer:
      class_name: VarianceScaling
      config: {distribution: uniform, mode: fan_avg, scale: 1.0, seed: null}
    kernel_regularizer: null
    kernel_size: !!python/tuple [8]
    name: conv1d_1
    padding: same
    strides: !!python/tuple [2]
    trainable: true
    use_bias: true
- class_name: Activation
  config: {activation: elu, name: activation_1, trainable: true}
- class_name: MaxPooling1D
  config:
    name: max_pooling1d_1
    padding: valid
    pool_size: !!python/tuple [4]
    strides: !!python/tuple [4]
    trainable: true
- class_name: Conv1D
  config:
    activation: linear
    activity_regularizer: null
    bias_constraint: null
    bias_initializer:
      class_name: Zeros
      config: {}
    bias_regularizer: null
    dilation_rate: !!python/tuple [1]
    filters: 256
    kernel_constraint: null
    kernel_initializer:
      class_name: VarianceScaling
      config: {distribution: uniform, mode: fan_avg, scale: 1.0, seed: null}
    kernel_regularizer: null
    kernel_size: !!python/tuple [6]
    name: conv1d_2
    padding: same
    strides: !!python/tuple [1]
    trainable: true
    use_bias: true
- class_name: Activation
  config: {activation: elu, name: activation_2, trainable: true}
- class_name: MaxPooling1D
  config:
    name: max_pooling1d_2
    padding: valid
    pool_size: !!python/tuple [2]
    strides: !!python/tuple [2]
    trainable: true
- class_name: Conv1D
  config:
    activation: linear
    activity_regularizer: null
    bias_constraint: null
    bias_initializer:
      class_name: Zeros
      config: {}
    bias_regularizer: null
    dilation_rate: !!python/tuple [1]
    filters: 256
    kernel_constraint: null
    kernel_initializer:
      class_name: VarianceScaling
      config: {distribution: uniform, mode: fan_avg, scale: 1.0, seed: null}
    kernel_regularizer: null
    kernel_size: !!python/tuple [6]
    name: conv1d_3
    padding: same
    strides: !!python/tuple [1]
    trainable: true
    use_bias: true
- class_name: Activation
  config: {activation: elu, name: activation_3, trainable: true}
- class_name: MaxPooling1D
  config:
    name: max_pooling1d_3
    padding: valid
    pool_size: !!python/tuple [2]
    strides: !!python/tuple [2]
    trainable: true
- class_name: Dropout
  config: {name: dropout_1, rate: 0.5, trainable: true}
- class_name: GRU
  config:
    activation: tanh
    activity_regularizer: null
    bias_constraint: null
    bias_initializer:
      class_name: Zeros
      config: {}
    bias_regularizer: null
    dropout: 0.0
    go_backwards: false
    implementation: 0
    kernel_constraint: null
    kernel_initializer:
      class_name: VarianceScaling
      config: {distribution: uniform, mode: fan_avg, scale: 1.0, seed: null}
    kernel_regularizer: null
    name: gru_1
    recurrent_activation: hard_sigmoid
    recurrent_constraint: null
    recurrent_dropout: 0.0
    recurrent_initializer:
      class_name: Orthogonal
      config: {gain: 1.0, seed: null}
    recurrent_regularizer: null
    return_sequences: true
    stateful: false
    trainable: true
    units: 128
    unroll: false
    use_bias: true
- class_name: Dropout
  config: {name: dropout_2, rate: 0.5, trainable: true}
- class_name: TimeDistributed
  config:
    layer:
      class_name: Dense
      config:
        activation: linear
        activity_regularizer: null
        bias_constraint: null
        bias_initializer:
          class_name: Zeros
          config: {}
        bias_regularizer: null
        kernel_constraint: null
        kernel_initializer:
          class_name: VarianceScaling
          config: {distribution: uniform, mode: fan_avg, scale: 1.0, seed: null}
        kernel_regularizer: null
        name: dense_1
        trainable: true
        units: 8
        use_bias: true
    name: time_distributed_1
    trainable: true
- class_name: Activation
  config: {activation: softmax, name: realtime_output, trainable: true}
- class_name: Lambda
  config:
    arguments: {}
    function: !!python/tuple ["c\x01\0\0\0\x01\0\0\0\x04\0\0\0S\0\0\0s\x13\0\0\0t\0\
        \0j\x01\0|\0\0d\x01\0d\x02\0\x83\x01\x01S(\x03\0\0\0Nt\x04\0\0\0axisi\x01\0\
        \0\0(\x02\0\0\0t\x01\0\0\0Kt\x04\0\0\0mean(\x01\0\0\0t\x01\0\0\0x(\0\0\0\0\
        (\0\0\0\0s\x13\0\0\0train_crnn_model.pyt\b\0\0\0<lambda>R\0\0\0s\0\0\0\0",
      null, null]
    function_type: lambda
    name: merged_output
    output_shape: null
    output_shape_type: raw
    trainable: true
keras_version: 2.0.2
